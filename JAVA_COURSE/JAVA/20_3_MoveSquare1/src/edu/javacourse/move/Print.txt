package edu.javacourse.move;

import javax.swing.JFrame;

public class MoveSquare
{

    public static void main(String[] args)
    {
        // Создаем графическое окно
        MoveSquareFrame msf = new MoveSquareFrame();
        // Задаем правидо, по которому приложение завершиться при 
        // закрытии этой формы
        msf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        // Делаем окно видимым
        msf.setVisible(true);
    }
}

package edu.javacourse.move;

import java.awt.BorderLayout;
import javax.swing.JButton;
import javax.swing.JFrame;

public class MoveSquareFrame extends JFrame
{
    public static final String UP = "UP";
    public static final String DOWN = "DOWN";
    
    public MoveSquareFrame() {
        SquareComponent sc = new SquareComponent();
        // Кладем компонент для рисования квадрата
        add(sc);
        
        // Создаем кнопку для посылки команды движения вверх
        JButton btnUp = new JButton(UP);
        // Устанавливаем ей идентификатор, по которому сможем узнать эту кнопку
        btnUp.setActionCommand(UP);
        // Устанавливаем ей слушатель - компонент для рисования квадрата
        btnUp.addActionListener(sc);
        // Кладем кнопку на самый верх формы - на север
        add(btnUp, BorderLayout.NORTH);
        
        // Создаем кнопку для посылки команды движения вниз
        JButton btnDown = new JButton(DOWN);
        // Устанавливаем ей идентификатор, по которому сможем узнать эту кнопку
        btnDown.setActionCommand(DOWN);
        // Устанавливаем ей слушатель - компонент для рисования квадрата
        btnDown.addActionListener(sc);
        // Кладем кнопку на самый низ формы - на юг
        add(btnDown, BorderLayout.SOUTH);
        
        // Устанавливаем координаты
        setBounds(100, 100, 400, 400);
    }
}

package edu.javacourse.move;

import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JComponent;

// Наш класс умеет получать события от кнопки т.к. реализует интерфейс ActionListener
public class SquareComponent extends JComponent implements ActionListener
{
    // Определяем константу для размера квадрата
    private static final int SQUARE_SIZE = 30;
    // Определяем константу для шага
    private static final int STEP = 10;
    // Определяем поля для хранения текущих координат квадрата
    private int x = 0;
    private int y = 0;

    @Override
    public void actionPerformed(ActionEvent e)
    {
        // Входной параметр содержит ссылку на того, кто послал сообщение.
        // Получает объект с помощью вызова getSource()
        // С помощью слова instanceof мы можем проверить, что объект принадлежит
        // классы JButton (или его потомку)
        if (e.getSource() instanceof JButton) {
            // Приводим объект к типу JButton
            JButton btn = (JButton) e.getSource();
            // Сравниваем команду со строкой UP
            if (MoveSquareFrame.UP.equals(btn.getActionCommand())) {
                // Вверх двигаемся уменьшением координаты Y
                y -= STEP;
            }
            // Сравниваем команду со строкой DOWN
            if (MoveSquareFrame.DOWN.equals(btn.getActionCommand())) {
                // Вниз двигаемся увеличением координаты Y
                y += STEP;
            }
            // Перерисовываем компонент для обновления экрана
            repaint();
        }
    }

    @Override
    protected void paintComponent(Graphics g)
    {
        super.paintComponent(g);
        g.drawRect(x, y, SQUARE_SIZE, SQUARE_SIZE);
    }
}

