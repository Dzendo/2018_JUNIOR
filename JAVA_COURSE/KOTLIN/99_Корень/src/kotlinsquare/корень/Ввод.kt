/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kotlinsquare.корень

/**
 *
 * @author LV
 */
class Ввод
/**
 * Creates new form Ввод
 */
(parent: java.awt.Frame, modal: Boolean) : java.awt.Dialog(parent, modal) {


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private var jTextField1: javax.swing.JTextField? = null

    init {
        initComponents()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private fun initComponents() {

        jTextField1 = javax.swing.JTextField()

        addWindowListener(object : java.awt.event.WindowAdapter() {
            override fun windowClosing(evt: java.awt.event.WindowEvent?) {
                closeDialog(evt)
            }
        })

        jTextField1!!.background = java.awt.Color(255, 255, 102)
        jTextField1!!.font = null
        jTextField1!!.foreground = null
        jTextField1!!.horizontalAlignment = javax.swing.JTextField.CENTER
        jTextField1!!.text = "ВЫЧИСЛЕНИЕ КВАДРАТНОГО КОРНЯ \naX*X+b*X+c" // NOI18N
        jTextField1!!.addActionListener { evt -> jTextField1ActionPerformed(evt) }
        add(jTextField1!!, java.awt.BorderLayout.NORTH)

        pack()
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private fun closeDialog(evt: java.awt.event.WindowEvent?) {//GEN-FIRST:event_closeDialog
        isVisible = false
        dispose()
    }//GEN-LAST:event_closeDialog

    private fun jTextField1ActionPerformed(evt: java.awt.event.ActionEvent) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    companion object {

        /**
         * @param args the command line arguments
         */
        @JvmStatic
        fun main(args: Array<String>) {
            java.awt.EventQueue.invokeLater {
                val dialog = Ввод(java.awt.Frame(), true)
                dialog.addWindowListener(object : java.awt.event.WindowAdapter() {
                    override fun windowClosing(e: java.awt.event.WindowEvent?) {
                        System.exit(0)
                    }
                })
                dialog.isVisible = true
            }
        }
    }
    // End of variables declaration//GEN-END:variables
}
