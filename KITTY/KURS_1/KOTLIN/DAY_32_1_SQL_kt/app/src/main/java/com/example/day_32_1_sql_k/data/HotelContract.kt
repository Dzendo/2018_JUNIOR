package com.example.day_32_1_sql_k.data

import android.provider.BaseColumns

//  Подписываем контракт
// В последних рекомендациях Гугла рекомендуется создавать класс-контракт.
// Мы как бы подписываем контракт на работу с базой данных и предоставляем все нужные данные.
//Внутри созданного пакета создаём новый класс HotelContract
object HotelContract {
    // Класс-контракт является контейнером для базы данных
    // и может содержать несколько внутренних классов,
    // которые представляют отдельные таблицы
    // (не забывайте, что база данных может содержать несколько таблиц).
    // Внутри класса создаём внутренний класс.
    // В нашем случае будет один класс для таблицы guests.
    class GuestEntry : BaseColumns {
        // Нам следует задать схему таблицы и константы для столбцов для удобства.
        companion object {
            val TABLE_NAME = "guests"

            val _ID = BaseColumns._ID
            val COLUMN_NAME = "name"
            val COLUMN_CITY = "city"
            val COLUMN_GENDER = "gender"
            val COLUMN_AGE = "age"

            val GENDER_FEMALE = 0
            val GENDER_MALE = 1
            val GENDER_UNKNOWN = 2
        }
    }
    // После создания класса мы можем изменить код в EditorActivity в том месте,
    // где происходит выбор пола гостя через выпадающий список.
}
// В классе используется реализация интерфейса BaseColumn:
// public static final class GuestEntry implements BaseColumns {
// Что это нам даёт?
// В большинстве случаев работа с базой данных происходит через специальные объекты Cursor,
// которые требуют наличия в таблице колонки с именем _id.
// Вы можете создать столбец вручную в коде, а можно положиться на BaseColumn,
// который создаст столбец с нужным именем автоматически.
// Дело ваше.
// Если вы не будете работать с курсорами, то можете использовать и стандартное наименование id
// или вообще не использовать данный столбец, но не советую так поступать,
// чтобы не вырабатывать вредных привычек.